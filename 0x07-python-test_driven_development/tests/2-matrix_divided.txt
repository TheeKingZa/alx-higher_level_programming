# Importing the function for testing
>>> from my_module import matrix_divided

# Testing with valid inputs
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

# Testing with a different divisor
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0], [2.33, 2.67, 3.0]]

# Testing with a matrix of all zeros
>>> zero_matrix = [[0, 0], [0, 0]]
>>> matrix_divided(zero_matrix, 5)
[[0.0, 0.0], [0.0, 0.0]]

# Testing with a single-element matrix
>>> single_element_matrix = [[7]]
>>> matrix_divided(single_element_matrix, 2)
[[3.5]]

# Testing with invalid inputs (should raise appropriate exceptions)
>>> matrix_divided("invalid", 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [4, 5], [6, 7, 8]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2], [3, 4]], "invalid")
Traceback (most recent call last):
    ...
TypeError: div must be a number (integer or float)

>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

